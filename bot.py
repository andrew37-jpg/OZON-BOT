import asyncio
import logging
import random
import aiohttp
from aiogram import Bot, Dispatcher, Router
from aiogram.filters import Command
from aiogram.types import Message
import os
from dotenv import load_dotenv
import sqlite3
import pymorphy2
from itertools import islice

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞ .env
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
NOTIFICATION_CHANNEL_ID = os.getenv("NOTIFICATION_CHANNEL_ID")
OZON_API_URL = "https://api-seller.ozon.ru"
OZON_TOKEN = os.getenv("OZON_TOKEN")
CLIENT_ID = os.getenv("CLIENT_ID")
CHECK_INTERVAL = int(os.getenv("CHECK_INTERVAL", 300))

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º, —á—Ç–æ –≤—Å–µ —Ç–æ–∫–µ–Ω—ã –∑–∞–¥–∞–Ω—ã
if not all([TELEGRAM_BOT_TOKEN, NOTIFICATION_CHANNEL_ID, OZON_TOKEN, CLIENT_ID]):
    raise ValueError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–¥–∞–π—Ç–µ TELEGRAM_BOT_TOKEN, NOTIFICATION_CHANNEL_ID, OZON_TOKEN –∏ CLIENT_ID!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TELEGRAM_BOT_TOKEN)
dp = Dispatcher()
router = Router()  # –°–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä


def init_db():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü."""
    if os.path.exists("ozon_reviews.db"):
        os.remove("ozon_reviews.db")

    conn = sqlite3.connect("ozon_reviews.db")
    cursor = conn.cursor()
    # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
    cursor.execute("""
        CREATE TABLE IF NOT EXISTS processed_reviews (
            review_id TEXT PRIMARY KEY,  -- –ò—Å–ø–æ–ª—å–∑—É–µ–º TEXT –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è UUID
            sku TEXT,
            product_name TEXT,
            user_name TEXT,
            review_text TEXT,
            rating INTEGER,
            response_text TEXT,
            comment_id TEXT,
            processed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    """)
    conn.commit()
    conn.close()


def save_review_to_db(review_id, sku, product_name, user_name, review_text, rating, response_text, comment_id):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ—Ç–∑—ã–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö."""
    conn = sqlite3.connect("ozon_reviews.db")
    cursor = conn.cursor()
    cursor.execute("""
        INSERT INTO processed_reviews (review_id, sku, product_name, user_name, review_text, rating, response_text, comment_id)
        VALUES (?, ?, ?, ?, ?, ?, ?, ?)
    """, (review_id, sku, product_name, user_name, review_text, rating, response_text, comment_id))
    conn.commit()
    conn.close()


def is_review_processed(review_id):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –æ–±—Ä–∞–±–æ—Ç–∞–Ω –ª–∏ –æ—Ç–∑—ã–≤ —Ä–∞–Ω–µ–µ."""
    conn = sqlite3.connect("ozon_reviews.db")
    cursor = conn.cursor()
    cursor.execute("SELECT 1 FROM processed_reviews WHERE review_id = ?", (review_id,))
    result = cursor.fetchone()
    conn.close()
    return result is not None


async def get_unprocessed_reviews():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ —á–µ—Ä–µ–∑ Ozon Seller API."""
    url = f"{OZON_API_URL}/v1/review/list"
    headers = {
        "Client-Id": CLIENT_ID,
        "Api-Key": OZON_TOKEN,
        "Content-Type": "application/json",
    }
    payload = {"limit": 50, "sort_dir": "ASC", "status": "UNPROCESSED"}
    async with aiohttp.ClientSession() as session:
        try:
            async with session.post(url, json=payload, headers=headers) as response:
                logging.info(f"–°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status}")
                result = await response.json()
                if response.status == 200:
                    return result.get("reviews", [])
                else:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –æ—Ç–∑—ã–≤–æ–≤: {result}")
                    return []
        except aiohttp.ClientError as e:
            logging.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ API: {e}")
            return []


async def get_product_name_by_sku(sku):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ —á–µ—Ä–µ–∑ SKU —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Ozon API."""
    if not sku:
        logging.warning("SKU –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∑–∞–ø—Ä–æ—Å –ø—Ä–æ–ø—É—â–µ–Ω.")
        return None

    url = f"{OZON_API_URL}/v2/product/info"
    headers = {
        "Client-Id": CLIENT_ID,
        "Api-Key": OZON_TOKEN,
        "Content-Type": "application/json",
    }
    payload = {"sku": sku}

    async with aiohttp.ClientSession() as session:
        try:
            async with session.post(url, json=payload, headers=headers) as response:
                result = await response.json()
                if response.status == 200 and "result" in result:
                    return result["result"].get("name")
                else:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ {sku}: {result}")
        except aiohttp.ClientError as e:
            logging.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–µ {sku}: {e}")
    return None


async def post_comment(review_id, text):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞ –æ—Ç–∑—ã–≤ —á–µ—Ä–µ–∑ Ozon API."""
    url = f"{OZON_API_URL}/v1/review/comment/create"
    headers = {
        "Client-Id": CLIENT_ID,
        "Api-Key": OZON_TOKEN,
        "Content-Type": "application/json",
    }
    payload = {"mark_review_as_processed": True, "review_id": review_id, "text": text}
    async with aiohttp.ClientSession() as session:
        try:
            async with session.post(url, json=payload, headers=headers) as response:
                result = await response.json()
                if response.status == 200:
                    return result.get("comment_id")
                else:
                    logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {result}")
        except aiohttp.ClientError as e:
            logging.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: {e}")
    return None



async def notify_channel(sku, response_text, rating, product_name, user_name, review_text):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –æ –Ω–æ–≤–æ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏."""
    user_name = user_name if user_name else "–ê–Ω–æ–Ω–∏–º"
    review_message = (
        f"–û–û–û –ì—É—Ç–µ–Ω –ú–æ—Ä–≥–µ–Ω\n"
        f"‚≠êÔ∏è{'‚≠êÔ∏è' * (rating - 1)}\n"
        f"–ê—Ä—Ç–∏–∫—É–ª Ozon: {sku} (https://www.ozon.ru/product/polotentse-mahrovoe-guten-morgen-1-sht-50h90-visdom-hlopok-100-450-g-m2-{sku}/?at=PjtJn4mrrcpDJKlxi71M2m3Ux8Y9MYc7Kkov3cK66R4g&avtc=1&avte=4&avts=1739353793&keywords=%D0%9F%D0%9C%D0%94%D0%92%D0%B8%D1%81%D0%B4-30-50)\n"
        f"–¢–æ–≤–∞—Ä: {product_name}\n\n"
        f"üí¨ {user_name}\n{review_text}\n\n"
        f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç:\n{response_text}"
    )
    try:
        await bot.send_message(NOTIFICATION_CHANNEL_ID, review_message, parse_mode="HTML")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª: {e}")


def generate_response(rating, brand_name, product_name):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à–∞–±–ª–æ–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞."""
    morph = pymorphy2.MorphAnalyzer()

    first_word = product_name.split()[0] if product_name else "–ø—Ä–æ–¥—É–∫—Ç"
    first_word_parsed = morph.parse(first_word)[0]
    first_word_genitive = first_word_parsed.inflect({'gent'}).word if first_word_parsed.inflect({'gent'}) else "–ø—Ä–æ–¥—É–∫—Ü–∏–∏"

    our_word_parsed = morph.parse("–Ω–∞—à–µ–π")[0]
    gender = first_word_parsed.tag.gender if first_word_parsed.tag.gender else 'neut'
    our_word_genitive = our_word_parsed.inflect({gender}).word if our_word_parsed.inflect({gender}) else "–Ω–∞—à–µ–π"

    # –û—Ç–≤–µ—Ç—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Ü–µ–Ω–∫–∏
    responses = {
        5: [
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –Ω–∞—à —Ç–æ–≤–∞—Ä. –ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å —Å–Ω–æ–≤–∞ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –æ—Ç–ª–∏—á–Ω—É—é –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ —Ç–æ–≤–∞—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ–ø—Ä–∞–≤–¥–∞–ª –í–∞—à–∏ –æ–∂–∏–¥–∞–Ω–∏—è. –ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å —Å–Ω–æ–≤–∞ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –≤—ã—Å–æ–∫—É—é –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ú—ã —Ä–∞–¥—ã, —á—Ç–æ –í–∞–º –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –Ω–∞—à —Ç–æ–≤–∞—Ä. –ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å —Å–Ω–æ–≤–∞ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ, —á—Ç–æ–±—ã –≤—Å–µ–≥–¥–∞ –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}."
        ],
        4: [
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ú—ã —Ä–∞–¥—ã, —á—Ç–æ —Ç–æ–≤–∞—Ä –í–∞–º –ø–æ–¥–æ—à–µ–ª. –ë—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å —Å–Ω–æ–≤–∞ –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ —Ö–æ—Ä–æ—à—É—é –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –ø–æ–º–æ—á—å –í–∞–º —Å –≤—ã–±–æ—Ä–æ–º –≤ –±—É–¥—É—â–µ–º. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ï—Å–ª–∏ –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –±—É–¥–µ–º —Ä–∞–¥—ã –∏—Ö —É—Å–ª—ã—à–∞—Ç—å. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}."
        ],
        3: [
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ù–∞–º –≤–∞–∂–Ω–æ –í–∞—à–µ –º–Ω–µ–Ω–∏–µ, –∏ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏—è–º–∏. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –±—É–¥—É—â–µ–º. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ú—ã —Ü–µ–Ω–∏–º –í–∞—à—É –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –∏ –±—É–¥–µ–º —É—á–∏—Ç—ã–≤–∞—Ç—å –í–∞—à–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}."
        ],
        2: [
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ë–ª–∞–≥–æ–¥–∞—Ä–∏–º –í–∞—Å –∑–∞ –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}! –ù–∞–º –∂–∞–ª—å, —á—Ç–æ —Ç–æ–≤–∞—Ä –í–∞–º –Ω–µ –ø–æ–¥–æ—à–µ–ª, –º—ã –ø—Ä–∏–º–µ–º –º–µ—Ä—ã. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ü–µ–Ω–∫—É {our_word_genitive} {first_word_genitive}. –ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞—à–µ–≥–æ —Ç–æ–≤–∞—Ä–∞. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ü—Ä–æ—Å—Ç–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞ —Å {our_word_genitive} {first_word_genitive}! –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}."
        ],
        1: [
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –í–∞–º –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å {our_word_genitive} {first_word_genitive}. –ú—ã –ø—Ä–∏–º–µ–º –≤—Å–µ –º–µ—Ä—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ–ø—Ä–∏—è—Ç–Ω—ã–π –æ–ø—ã—Ç —Å {our_word_genitive} {first_word_genitive}. –ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—á—Ç–µ–º –í–∞—à–∏ –∑–∞–º–µ—á–∞–Ω–∏—è. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}.",
            f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π –æ–ø—ã—Ç —Å {our_word_genitive} {first_word_genitive}. –ú—ã –±—É–¥–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º –∫–∞—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞. –î–æ–±–∞–≤–ª—è–π—Ç–µ –±—Ä–µ–Ω–¥ {brand_name} –≤ —Å–ø–∏—Å–æ–∫ –ª—é–±–∏–º—ã—Ö, —á—Ç–æ–±—ã –±—ã—Ç—å –≤ –∫—É—Ä—Å–µ –∞–∫—Ü–∏–π –∏ –Ω–æ–≤–∏–Ω–æ–∫! –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –ö–æ–º–∞–Ω–¥–∞ {brand_name}."
        ]
    }
    return random.choice(responses.get(rating, ["–°–ø–∞—Å–∏–±–æ –∑–∞ –í–∞—à—É –æ—Ü–µ–Ω–∫—É!"]))

async def handle_reviews():
    """–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∑—ã–≤–æ–≤."""
    logging.info("‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –æ—Ç–∑—ã–≤–æ–≤...")
    reviews = await get_unprocessed_reviews()
    if not reviews:
        logging.info("–ù–µ—Ç –Ω–æ–≤—ã—Ö –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤.")
        return

    for review in islice(reviews, 5):  # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–≤—ã—Ö 5 –æ—Ç–∑—ã–≤–æ–≤
        review_id = review.get("id")
        review_text = review.get("text", "–û—Ç–∑—ã–≤ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        rating = review.get("rating", 0) or 1
        product_name = review.get("product_name")
        sku = review.get("sku")

        if is_review_processed(review_id):
            logging.info(f"–û—Ç–∑—ã–≤ ID: {review_id} —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
            continue

        if not product_name and sku:
            product_name = await get_product_name_by_sku(sku)

        if not product_name:
            logging.warning(f"–¢–æ–≤–∞—Ä –¥–ª—è SKU {sku} –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–∑—ã–≤–∞ ID {review_id}.")
            continue

        brand_name = "–ì—É—Ç–µ–Ω –ú–æ—Ä–≥–µ–Ω"
        response_text = generate_response(rating, brand_name, product_name)

        comment_id = await post_comment(review_id, response_text)
        if comment_id:
            logging.info(f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –æ—Ç–∑—ã–≤–∞ ID: {review_id}")
            await notify_channel(sku, response_text, rating, product_name, '–ê–Ω–æ–Ω–∏–º', review_text)
            save_review_to_db(review_id, str(sku), product_name, '–ê–Ω–æ–Ω–∏–º', review_text, int(rating), response_text, str(comment_id))
        else:
            logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –¥–ª—è –æ—Ç–∑—ã–≤–∞ ID: {review_id}")





@router.message(Command(commands=["start", "help"]))
async def send_welcome(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ /help."""
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –æ—Ç–∑—ã–≤—ã Ozon.")


async def scheduled_task():
    """–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–∑—ã–≤–æ–≤ (–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç 5 –æ—Ç–∑—ã–≤–æ–≤ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç)."""
    while True:
        try:
            await handle_reviews()
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–∑—ã–≤–æ–≤: {e}")
        await asyncio.sleep(CHECK_INTERVAL)


async def main():
    init_db()
    dp.include_router(router)
    asyncio.create_task(scheduled_task())
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
